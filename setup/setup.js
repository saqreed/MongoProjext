const { MongoClient } = require('mongodb');
const bcrypt = require('bcryptjs');
require('dotenv').config();

const setup = async () => {
  let client;
  
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö MongoDB...');
    
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
    client = new MongoClient(process.env.MONGODB_URI);
    await client.connect();
    const db = client.db('company_db');
    
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å–ø–µ—à–Ω–æ!');
    
    // –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    const collections = ['users', 'employees', 'projects', 'departments'];
    for (const collectionName of collections) {
      try {
        await db.collection(collectionName).drop();
        console.log(`üóëÔ∏è –ö–æ–ª–ª–µ–∫—Ü–∏—è ${collectionName} –æ—á–∏—â–µ–Ω–∞`);
      } catch (error) {
        console.log(`‚ÑπÔ∏è –ö–æ–ª–ª–µ–∫—Ü–∏—è ${collectionName} –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–∞`);
      }
    }
    
    // 1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–∞–∑–Ω—ã–º–∏ —É—Ä–æ–≤–Ω—è–º–∏ –¥–æ—Å—Ç—É–ø–∞
    console.log('\nüë• –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    
    const users = [
      {
        username: 'admin',
        password: await bcrypt.hash('admin123', 10),
        permissions: ['admin', 'read', 'write'],
        description: '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –æ–ø–µ—Ä–∞—Ü–∏—è–º'
      },
      {
        username: 'manager',
        password: await bcrypt.hash('manager123', 10),
        permissions: ['read', 'write'],
        description: '–ß—Ç–µ–Ω–∏–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö'
      },
      {
        username: 'viewer',
        password: await bcrypt.hash('viewer123', 10),
        permissions: ['read'],
        description: '–¢–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö'
      }
    ];
    
    await db.collection('users').insertMany(users);
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã:');
    users.forEach(user => {
      console.log(`   - ${user.username} (${user.description})`);
    });
    
    // 2. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–¥–µ–ª–æ–≤
    console.log('\nüè¢ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–¥–µ–ª–æ–≤...');
    
    const departments = [
      {
        name: 'IT',
        description: '–û—Ç–¥–µ–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
        location: '–ú–æ—Å–∫–≤–∞',
        budget: 2000000
      },
      {
        name: 'HR',
        description: '–û—Ç–¥–µ–ª –∫–∞–¥—Ä–æ–≤',
        location: '–ú–æ—Å–∫–≤–∞',
        budget: 800000
      },
      {
        name: '–§–∏–Ω–∞–Ω—Å—ã',
        description: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç–¥–µ–ª',
        location: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
        budget: 1500000
      },
      {
        name: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥',
        description: '–û—Ç–¥–µ–ª –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞',
        location: '–ú–æ—Å–∫–≤–∞',
        budget: 1200000
      }
    ];
    
    await db.collection('departments').insertMany(departments);
    console.log('‚úÖ –û—Ç–¥–µ–ª—ã —Å–æ–∑–¥–∞–Ω—ã');
    
    // 3. –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    console.log('\nüë®‚Äçüíº –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤...');
    
    const employees = [
      {
        name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
        position: 'Senior Developer',
        department: 'IT',
        salary: 120000,
        email: 'ivan.petrov@company.com',
        phone: '+7-900-123-4567',
        hireDate: new Date('2020-03-15'),
        skills: ['JavaScript', 'Node.js', 'MongoDB']
      },
      {
        name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
        position: 'Project Manager',
        department: 'IT',
        salary: 100000,
        email: 'maria.sidorova@company.com',
        phone: '+7-900-234-5678',
        hireDate: new Date('2019-06-20'),
        skills: ['Project Management', 'Agile', 'Scrum']
      },
      {
        name: '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤',
        position: 'HR Manager',
        department: 'HR',
        salary: 85000,
        email: 'alexey.kozlov@company.com',
        phone: '+7-900-345-6789',
        hireDate: new Date('2021-01-10'),
        skills: ['Recruitment', 'Training', 'Employee Relations']
      },
      {
        name: '–ï–ª–µ–Ω–∞ –í–∞—Å–∏–ª—å–µ–≤–∞',
        position: 'Financial Analyst',
        department: '–§–∏–Ω–∞–Ω—Å—ã',
        salary: 90000,
        email: 'elena.vasilieva@company.com',
        phone: '+7-900-456-7890',
        hireDate: new Date('2020-09-05'),
        skills: ['Financial Analysis', 'Excel', 'Reporting']
      },
      {
        name: '–î–º–∏—Ç—Ä–∏–π –ù–∏–∫–æ–ª–∞–µ–≤',
        position: 'Marketing Specialist',
        department: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥',
        salary: 75000,
        email: 'dmitry.nikolaev@company.com',
        phone: '+7-900-567-8901',
        hireDate: new Date('2022-02-28'),
        skills: ['Digital Marketing', 'SEO', 'Content Creation']
      },
      {
        name: '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
        position: 'Junior Developer',
        department: 'IT',
        salary: 60000,
        email: 'anna.smirnova@company.com',
        phone: '+7-900-678-9012',
        hireDate: new Date('2023-01-15'),
        skills: ['HTML', 'CSS', 'JavaScript']
      }
    ];
    
    await db.collection('employees').insertMany(employees);
    console.log('‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å–æ–∑–¥–∞–Ω—ã');
    
    // 4. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤
    console.log('\nüìä –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤...');
    
    const projects = [
      {
        name: '–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º',
        description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–∏—Å—Ç–µ–º—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏',
        status: '–í —Ä–∞–±–æ—Ç–µ',
        budget: 500000,
        startDate: new Date('2023-01-01'),
        endDate: new Date('2023-12-31'),
        team: ['–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞'],
        department: 'IT'
      },
      {
        name: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è –∫–∞–º–ø–∞–Ω–∏—è Q2',
        description: '–ó–∞–ø—É—Å–∫ —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏ –Ω–∞ –≤—Ç–æ—Ä–æ–π –∫–≤–∞—Ä—Ç–∞–ª',
        status: '–ó–∞–≤–µ—Ä—à–µ–Ω',
        budget: 300000,
        startDate: new Date('2023-04-01'),
        endDate: new Date('2023-06-30'),
        team: ['–î–º–∏—Ç—Ä–∏–π –ù–∏–∫–æ–ª–∞–µ–≤'],
        department: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥'
      },
      {
        name: '–û–±—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
        description: '–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –∏ –æ–±—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
        status: '–ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è',
        budget: 150000,
        startDate: new Date('2024-01-01'),
        endDate: new Date('2024-03-31'),
        team: ['–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤'],
        department: 'HR'
      },
      {
        name: '–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å Q4',
        description: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏',
        status: '–í —Ä–∞–±–æ—Ç–µ',
        budget: 100000,
        startDate: new Date('2023-10-01'),
        endDate: new Date('2023-12-31'),
        team: ['–ï–ª–µ–Ω–∞ –í–∞—Å–∏–ª—å–µ–≤–∞'],
        department: '–§–∏–Ω–∞–Ω—Å—ã'
      }
    ];
    
    await db.collection('projects').insertMany(projects);
    console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç—ã —Å–æ–∑–¥–∞–Ω—ã');
    
    // 5. –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞
    console.log('\nüîç –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤...');
    
    // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    await db.collection('employees').createIndex({ name: 1 });
    await db.collection('employees').createIndex({ department: 1 });
    await db.collection('employees').createIndex({ position: 1 });
    await db.collection('employees').createIndex({ salary: 1 });
    await db.collection('employees').createIndex({ email: 1 }, { unique: true });
    
    // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
    await db.collection('projects').createIndex({ name: 1 });
    await db.collection('projects').createIndex({ status: 1 });
    await db.collection('projects').createIndex({ department: 1 });
    await db.collection('projects').createIndex({ startDate: 1, endDate: 1 });
    
    // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ—Ç–¥–µ–ª–æ–≤
    await db.collection('departments').createIndex({ name: 1 }, { unique: true });
    await db.collection('departments').createIndex({ location: 1 });
    
    // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await db.collection('users').createIndex({ username: 1 }, { unique: true });
    
    console.log('‚úÖ –ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞');
    
    // 6. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:');
    console.log(`   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${await db.collection('users').countDocuments()}`);
    console.log(`   üë®‚Äçüíº –°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: ${await db.collection('employees').countDocuments()}`);
    console.log(`   üìä –ü—Ä–æ–µ–∫—Ç–æ–≤: ${await db.collection('projects').countDocuments()}`);
    console.log(`   üè¢ –û—Ç–¥–µ–ª–æ–≤: ${await db.collection('departments').countDocuments()}`);
    
    console.log('\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìù –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
    console.log('   üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin / admin123');
    console.log('   üîß –ú–µ–Ω–µ–¥–∂–µ—Ä: manager / manager123'); 
    console.log('   üëÅÔ∏è –ß–∏—Ç–∞—Ç–µ–ª—å: viewer / viewer123');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    if (client) {
      await client.close();
      console.log('\nüîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
    }
  }
};

setup(); 